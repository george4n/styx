#!/bin/bash

#FUNCTIONS AVAILABLE

# global_welcome_user - sends user a welcome message
# global_set_wallpaper - sets the wallpaper at login
# global_set_launcher - sets the launcher icons at login
# global_start_apps - starts the most commonly used apps at login
# global_notify_login - sends a login notification to chat server
# global_start_timeout - creates a timer to auto logout user at specified time
# global_assistance - launches the assistance utility


# 3ts_start_remote - obsolete
# global_start_slack - 
# global_start_chrome - 
# global_start_vbox - 
# global_start_timeout - 

# tv_login
#	global_set_wallpaper
#	global_set_launcher
#	global_start_apps
#	global_notify_login
#	global_start_timeout
#	global_welcome_user


# 3ks_login
#	global_set_wallpaper
#	global_set_launcher
#	global_start_apps
#	global_notify_login
#	global_start_timeout
#	global_welcome_user

# 3ts_login
#	global_set_wallpaper
#	global_set_launcher
#	global_start_apps
#	global_notify_login
#	global_start_timeout
#	global_welcome_user


# 3sd_login
#	global_set_wallpaper
#	global_set_launcher
#	global_start_apps
#	global_notify_login
#	global_start_timeout
#	global_welcome_user


# get the user's name and display welcome message
function global_welcome_user {
	PERSON=`getent passwd $USER | cut -d ':' -f 5 | cut -d ',' -f 1`
	zenity --info --text "Welcome, $PERSON. System is ready!" --timeout 5 --width=30 --width=350 --title "System Status"
}

#################### WALLPAPER

function global_set_wallpaper {
	echo "-> Setting wallpaper for group $STYXGROUP..."
	if   [ $STYXGROUP = "televinken" ]; then
		gsettings set org.gnome.desktop.background picture-uri 'file:///usr/share/backgrounds/Beaver_Wallpaper_Grey_4096x2304.png'
	elif [ $STYXGROUP = "kundservice" ]; then
		gsettings set org.gnome.desktop.background picture-uri 'file:///usr/share/backgrounds/Beaver_Wallpaper_Grey_4096x2304.png'
	elif [ $STYXGROUP = "telesales" ]; then
		gsettings set org.gnome.desktop.background picture-uri 'file:///usr/share/backgrounds/Beaver_Wallpaper_Grey_4096x2304.png'
	elif [ $STYXGROUP = "solsidan" ]; then
		gsettings set org.gnome.desktop.background picture-uri 'file:///usr/share/backgrounds/Beaver_Wallpaper_Grey_4096x2304.png'
	else echo "Group not does exist, cannot set background";
fi
echo "-> Wallpaper set!"
}

######################################## LAUNCHER

function global_set_launcher {
	echo "-> Setting launcher for group $STYXGROUP..."
if   [ $STYXGROUP = "televinken" ]; then
	cp -r /usr/local/bin/styx/share/shortcuts/tv/* ~/.local/share/applications/
	gsettings set org.gnome.shell favorite-apps "['org.gnome.Nautilus.desktop', 'google-chrome.desktop', 'tv-assistance.desktop', 'tv-taskrunner.desktop', 'tv-exit.desktop', 'tv-reboot.desktop', 'xpad.desktop']"
elif [ $STYXGROUP = "kundservice" ]; then
	cp -r /usr/local/bin/styx/share/shortcuts/ks/* ~/.local/share/applications/
	gsettings set org.gnome.shell favorite-apps "['org.gnome.Nautilus.desktop', 'google-chrome.desktop', 'gnome-todo.desktop', 'ks-assistance.desktop', 'ks-taskrunner.desktop', 'ks-exit.desktop', 'ks-reboot.desktop', 'xpad.desktop']"
elif [ $STYXGROUP = "telesales" ]; then
	cp -r /usr/local/bin/styx/share/shortcuts/ts/* ~/.local/share/applications/
  gsettings set org.gnome.shell favorite-apps "['org.gnome.Nautilus.desktop', 'google-chrome.desktop', 'ts-assistance.desktop', 'ts-taskrunner.desktop', 'ts-exit.desktop', 'ts-reboot.desktop', 'xpad.desktop']"
elif [ $STYXGROUP = "solsidan" ]; then
	cp -r /usr/local/bin/styx/share/shortcuts/sd/* ~/.local/share/applications/
  gsettings set org.gnome.shell favorite-apps "['org.gnome.Nautilus.desktop', 'google-chrome.desktop', 'sd-assistance.desktop', 'sd-taskrunner.desktop', 'sd-exit.desktop', 'sd-reboot.desktop', 'xpad.desktop']"

else echo "Group not does exist, cannot set launcher";
fi
echo "-> Launcher set!"

}

### APP ###################################################################################

function global_start_apps {
	if   [ $STYXGROUP = "televinken" ]; then
		echo "-> Starting up apps for group $STYXGROUP"
		google-chrome &
		echo "-> App startup complete!"
	elif [ $STYXGROUP = "kundservice" ]; then
		echo "-> Starting up apps for group $STYXGROUP"
		google-chrome &
		echo "-> App startup complete!"
	elif [ $STYXGROUP = "telesales" ]; then
		echo "-> Starting up apps for group $STYXGROUP"
		google-chrome &
		echo "-> App startup complete!"
	elif [ $STYXGROUP = "solsidan" ]; then
		echo "-> Starting up apps for group $STYXGROUP"
		google-chrome &
		echo "-> App startup complete!"
	else echo "Group not does exit";
	fi
}

### SLACK NOTIFY ###########################################################################

function global_notify_login {
	echo "-> Sending login notification for group $STYXGROUP user..."
	GROUP=$(id -g -n $USER)
	PERSON="$(getent passwd $USER | cut -d ':' -f 5 | cut -d ',' -f 1)"
	curl -s --request POST \
		--url https://hooks.slack.com/services/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 \
  		--header 'Cache-Control: no-cache' \
  		--header 'Content-Type: application/json' \
  		--data '{"attachments":[{"color": "#ff0000","text": "'$HOSTNAME' logon session by '"$PERSON"' ('$USER') ['$GROUP']"}]}' > /dev/null

	echo "-> Notification sent!"
}


#################### TIMEOUT

function global_start_timeout {
	until date | fgrep -q "01:00:"; do
		sleep 1
	done
	styx-exit
}

#################### ASSISTANCE

function global_assistance {
	zenity \
	--question \
	--title "Request for Assistance" \
	--no-wrap \
	--text "Do you want to notify the IT Department at Televinken for Assistance?
	\n\nPlease be aware that support is only available\:\nMonday to Friday from 09\:00 until 18\:00."
	if [[ $? = 1 ]]; then
		zenity  --info \
		--width=50 \
		--title "Request Status" \
		--text "\nRequest has been cancelled!" \
		--no-wrap --timeout=5 && exit
	else
		szAnswer=$(zenity --entry --text "Please describe the issue" --entry-text "");
		if [[ $szAnswer < 1 ]]; then
			zenity  --info \
			--width=50 \
			--title "Request Status" \
			--text "\nRequest has been canceled! \n\nPlease try again." \
			--timeout=5 && exit
		else
			echo "assistance needed by `getent passwd $USER | cut -d ':' -f 5 | cut -d ',' -f 1` ($USER) on $HOSTNAME. ***$szAnswer***" | tvcc-3telesales-slacktee -p -c assistance -a danger
			zenity --info \
			--width=50 \
			--title "Request Status" \
			--text "\nRequest has been sent! \n\nPlease allow up to 10 minutes for a response." \
			--no-wrap \
			--timeout=5
		fi
	fi
}

function tv_assistance {
	zenity \
	--question \
	--title "Request for Assistance" \
	--no-wrap \
	--text "Do you want to notify the IT Department at Televinken for Assistance?
	\n\nPlease be aware that support is only available\:\nMonday to Friday from 09\:00 until 18\:00."
	if [[ $? = 1 ]]; then
		zenity 	--info \
		--width=50 \
		--title "Request Status" \
		--text "\nRequest has been cancelled!" \
		--no-wrap --timeout=5 && exit
	else
		szAnswer=$(zenity --entry --text "Please describe the issue" --entry-text "");
		if [[ $szAnswer < 1 ]]; then
			zenity 	--info \
			--width=50 \
			--title "Request Status" \
			--text "\nRequest has been canceled! \n\nPlease try again." \
			--no-wrap \
			--timeout=5 && exit
		else
			echo "assistance needed by `getent passwd $USER | cut -d ':' -f 5 | cut -d ',' -f 1` ($USER) on $HOSTNAME. ***$szAnswer***" | tvcc-3telesales-slacktee -p -c assistance -a danger
			zenity --info \
			--width=50 \
			--title "Request Status" \
			--text "\nRequest has been sent! \n\nPlease allow up to 10 minutes for a response." \
			--no-wrap \
			--timeout=5
		fi
	fi
}

#################### GLOBAL FUNCTIONS ####################

function 3ts_start_remote {
	echo start_remote
}
function global_start_slack {
	echo start_slack
}
function global_start_chrome {
	echo start_chrome
}
function global_start_vbox {
	echo start_vbox
}
function global_start_timeout {
	echo start_timeout
}

######################## VM CONTROL

function global_vbox_shutdown {
	for i in {001..020}; do
		VBoxManage controlvm nux$i acpipowerbutton
	done
}

function global_vbox_start {
	for i in {001..020}; do
		VBoxManage startvm nux$i
	done
}

function global_vbox_save {
	for i in {001..020}; do
		VBoxManage controlvm nux$i savestate
	done
}

function tv_login {
	global_set_wallpaper
	global_set_launcher
	global_start_apps
	global_notify_login
	global_start_timeout
	global_welcome_user
	exit 0
}

function 3ks_login {
	global_set_wallpaper
	global_set_launcher
	global_start_apps
	global_notify_login
	global_start_timeout
	global_welcome_user
	exit 0
}

function 3ts_login {
	global_set_wallpaper
	global_set_launcher
	global_start_apps
	global_notify_login
	global_start_timeout
	global_welcome_user
	exit 0
}

function 3sd_login {
	global_set_wallpaper
	global_set_launcher
	global_start_apps
	global_notify_login
	global_start_timeout
	global_welcome_user
	exit 0
}

########################## TASKRUNNER

function tv_taskrunner {

CHOICE=$(zenity --height=400 --width=360 --list \
   --title="Telesales Taskrunner" \
   --column="Task" --column="Description" \
   "1" "Logout Session" \
   "2" "Restart Bria" \
   "3" "Restore Bria Settings" \
   "4" "Refresh Logon Process" \
   "5" "Kill Remote" \
   "6" "Remote Legacy" \
   "7" "Refresh Sound System" \
   "8" "Download Remote Settings" \
   "9" "Remote Temp" \
   "10" "Headset Keepalive" \
)

if [[ $CHOICE = "1" ]]; then tvcc-3kundservice-logout &
elif [[ $CHOICE = "2" ]]; then fixbria &
elif [[ $CHOICE = "3" ]]; then restore_bria &
elif [[ $CHOICE = "4" ]]; then tvcc-3kundservice-logon &
elif [[ $CHOICE = "5" ]]; then killall rdesktop &
elif [[ $CHOICE = "6" ]]; then /mnt/.system/kundservice/admin/server/./remote-legacy.sh &
elif [[ $CHOICE = "7" ]]; then /mnt/.system/kundservice/admin/server/./fixpulse.sh &
elif [[ $CHOICE = "8" ]]; then /mnt/.system/kundservice/admin/server/./remote-settings.sh &
elif [[ $CHOICE = "9" ]]; then /mnt/.system/kundservice/admin/server/./remote-temp.sh &
elif [[ $CHOICE = "10" ]]; then gnome-terminal -e 'tvcc-click'
fi

}

function ks_taskrunner {

CHOICE=$(zenity --height=400 --width=360 --list \
   --title="Telesales Taskrunner" \
   --column="Task" --column="Description" \
   "1" "Logout Session" \
   "2" "Restart Bria" \
   "3" "Restore Bria Settings" \
   "4" "Refresh Logon Process" \
   "5" "Kill Remote" \
   "6" "Remote Legacy" \
   "7" "Refresh Sound System" \
   "8" "Download Remote Settings" \
   "9" "Remote Temp" \
   "10" "Headset Keepalive" \
)

if [[ $CHOICE = "1" ]]; then tvcc-3kundservice-logout &
elif [[ $CHOICE = "2" ]]; then fixbria &
elif [[ $CHOICE = "3" ]]; then restore_bria &
elif [[ $CHOICE = "4" ]]; then tvcc-3kundservice-logon &
elif [[ $CHOICE = "5" ]]; then killall rdesktop &
elif [[ $CHOICE = "6" ]]; then /mnt/.system/kundservice/admin/server/./remote-legacy.sh &
elif [[ $CHOICE = "7" ]]; then /mnt/.system/kundservice/admin/server/./fixpulse.sh &
elif [[ $CHOICE = "8" ]]; then /mnt/.system/kundservice/admin/server/./remote-settings.sh &
elif [[ $CHOICE = "9" ]]; then /mnt/.system/kundservice/admin/server/./remote-temp.sh &
elif [[ $CHOICE = "10" ]]; then gnome-terminal -e 'tvcc-click'
fi

}

function ts_taskrunner {

CHOICE=$(zenity --height=400 --width=360 --list \
   --title="Telesales Taskrunner" \
   --column="Task" --column="Description" \
   "1" "Logout Session" \
   "2" "Restart Bria" \
   "3" "Restore Bria Settings" \
   "4" "Refresh Logon Process" \
   "5" "Kill Remote" \
   "6" "Remote Legacy" \
   "7" "Refresh Sound System" \
   "8" "Download Remote Settings" \
   "9" "Remote Temp" \
   "10" "Headset Keepalive" \
)

if [[ $CHOICE = "1" ]]; then tvcc-3kundservice-logout &
elif [[ $CHOICE = "2" ]]; then fixbria &
elif [[ $CHOICE = "3" ]]; then restore_bria &
elif [[ $CHOICE = "4" ]]; then tvcc-3kundservice-logon &
elif [[ $CHOICE = "5" ]]; then killall rdesktop &
elif [[ $CHOICE = "6" ]]; then /mnt/.system/kundservice/admin/server/./remote-legacy.sh &
elif [[ $CHOICE = "7" ]]; then /mnt/.system/kundservice/admin/server/./fixpulse.sh &
elif [[ $CHOICE = "8" ]]; then /mnt/.system/kundservice/admin/server/./remote-settings.sh &
elif [[ $CHOICE = "9" ]]; then /mnt/.system/kundservice/admin/server/./remote-temp.sh &
elif [[ $CHOICE = "10" ]]; then gnome-terminal -e 'tvcc-click'
fi

}

function sd_taskrunner {

CHOICE=$(zenity --height=400 --width=360 --list \
   --title="Telesales Taskrunner" \
   --column="Task" --column="Description" \
   "1" "Logout Session" \
   "2" "Restart Bria" \
   "3" "Restore Bria Settings" \
   "4" "Refresh Logon Process" \
   "5" "Kill Remote" \
   "6" "Remote Legacy" \
   "7" "Refresh Sound System" \
   "8" "Download Remote Settings" \
   "9" "Remote Temp" \
   "10" "Headset Keepalive" \
)

if [[ $CHOICE = "1" ]]; then tvcc-3kundservice-logout &
elif [[ $CHOICE = "2" ]]; then fixbria &
elif [[ $CHOICE = "3" ]]; then restore_bria &
elif [[ $CHOICE = "4" ]]; then tvcc-3kundservice-logon &
elif [[ $CHOICE = "5" ]]; then killall rdesktop &
elif [[ $CHOICE = "6" ]]; then /mnt/.system/kundservice/admin/server/./remote-legacy.sh &
elif [[ $CHOICE = "7" ]]; then /mnt/.system/kundservice/admin/server/./fixpulse.sh &
elif [[ $CHOICE = "8" ]]; then /mnt/.system/kundservice/admin/server/./remote-settings.sh &
elif [[ $CHOICE = "9" ]]; then /mnt/.system/kundservice/admin/server/./remote-temp.sh &
elif [[ $CHOICE = "10" ]]; then gnome-terminal -e 'tvcc-click'
fi

}


function tv_exit {

	
}